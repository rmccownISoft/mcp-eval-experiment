# MCP Test Suite Configuration Example
# This file demonstrates all available configuration options

# LLM Provider Selection (required)
llmProvider: claude  # Options: claude, gemini, chatgpt

# API Keys (at least one required based on llmProvider)
apiKeys:
  claude: "sk-ant-api03-..."  # Claude API key
  gemini: "AIza..."           # Google AI Studio API key
  chatgpt: "sk-..."           # OpenAI API key
  gpt4: "sk-..."              # GPT-4 API key for evaluation (optional, defaults to chatgpt key)

# MCP Server Configuration (required)
mcpServer:
  url: "http://localhost:3000"
  username: "test_user"       # Optional: for authentication
  password: "test_password"   # Optional: for authentication
  storeId: "store_001"        # Optional: store identifier

# LLM Configuration (optional)
llmConfig:
  provider: claude            # Should match llmProvider above
  model: "claude-3-sonnet"    # Optional: specific model version
  temperature: 0.1            # Optional: 0.0-2.0, lower = more deterministic
  maxTokens: 4000             # Optional: maximum tokens per response
  timeout: 30000              # Optional: timeout in milliseconds

# Docker Environment (optional)
docker:
  containerName: "mcp-graphql-server"
  port: 3000
  healthCheckUrl: "http://localhost:3000/health"

# Test Configuration (optional)
testPrompts:
  - "./test-prompts/basic"
  - "./test-prompts/advanced"

# Output Configuration (optional)
outputDir: "./results"
verbose: true

# Example Environment Variables Alternative:
# Instead of this file, you can use environment variables:
# 
# MCP_LLM_PROVIDER=claude
# CLAUDE_API_KEY=sk-ant-api03-...
# GEMINI_API_KEY=AIza...
# OPENAI_API_KEY=sk-...
# GPT4_API_KEY=sk-...
# MCP_SERVER_URL=http://localhost:3000
# MCP_USERNAME=test_user
# MCP_PASSWORD=test_password
# MCP_STORE_ID=store_001
# DOCKER_CONTAINER_NAME=mcp-graphql-server
# DOCKER_PORT=3000
# DOCKER_HEALTH_URL=http://localhost:3000/health
# MCP_OUTPUT_DIR=./results
# MCP_VERBOSE=true
